{
	"atcoder": {
		"prefix": "head",
		"body": [
      "#include <bits/stdc++.h>",
      "using namespace std;",
			"#define ll long long",
			"#define rep(i, n) for(ll i=0; i<n; i++)",
			"#define repr(i, s, e) for(ll i=s; i>=e; i--)",
			"#define reps(i, s, e) for(ll i=s; i<=e; i++)",
			"#define inf 1e18",
			"#define all(v) v.begin(),v.end()",
			"#define vsort(v) sort(v.begin(), v.end())",
			"#define vsortr(v) sort(v.begin(), v.end(), greater<ll>())",
			"#define ceil(a, b) (a+b-1)/b",
			"#define ok cout << \"ok\" << endl;",
			"#define sp << \" \" <<",
			"template<typename T> inline bool chmax(T &a, T b){ if(a<b){ a=b; return true; } return false; }",
			"template<typename T> inline bool chmin(T &a, T b){ if(b<a){ a=b; return true; } return false; }",
			"template<typename T> void vdebug(vector<T> v){ cout << \"vdebug\" << endl; for(auto vv : v){ cout << vv << \" \"; } cout << endl; }",
      "template<typename T> void adebug(T arr[], ll n){ cout << \"adebug\" << endl; reps(i, 0, n){ cout << arr[i] << \" \"; } cout << endl; }",
      "template<typename T1, typename T2> void mdebug(map<T1, T2> mp){ cout << \"mdebug\" << endl; for(auto const& m : mp){ cout << m.first sp m.second << endl; }}",
      "template<typename T1, typename T2> void mldebug(multimap<T1, T2> mp){ cout << \"mldebug\" << endl; for(auto const& m : mp){ cout << m.first sp m.second << endl; }}",
      "template<typename T1, typename T2> void mdebugr(map<T1, T2, greater<T1>> mp){ cout << \"mdebug\" << endl; for(auto const& m : mp){ cout << m.first sp m.second << endl; }}",
      "template<typename T1, typename T2> void mldebugr(multimap<T1, T2, greater<T1>> mp){ cout << \"mldebug\" << endl; for(auto const& m : mp){ cout << m.first sp m.second << endl; }}",
			"void ans(bool b){ if(b) cout << \"Yes\" << endl; else cout << \"No\" << endl; }",
			"void ans2(bool b){ if(b) cout << \"YES\" << endl; else cout << \"NO\" << endl; }",
			"int dx[] = {1, -1, 0, 0, 1, -1, 1, -1};",
			"int dy[] = {0, 0, 1, -1, 1, -1, -1, 1};",
			"",
			"",
			"int main(){",
			"\tios::sync_with_stdio(false);",
			"\tcin.tie(0);",
			"",
			"\t$0",
			"",
			"\treturn 0;",
			"}"
		],
		"description": "This is AtCoder template"
	},
	"vector_find": {
		"prefix": "vfind",
		"body": [
			"template<typename T> bool vector_finder(vector<T> v, T pattern) {",
			"\tauto itr = find(v.begin(), v.end(), pattern);",
			"\tsize_t ind = distance(v.begin(), itr);",
			"\tif(ind != v.size()) return true;",
			"\telse return false;",
			"}"
		]
	},
	"comment": {
		"prefix": "comment",
		"body": [
			"/* $1 */"
		]
	},
	"lib-head": {
		"prefix": "libhead",
		"body": [
			"#include <bits/stdc++.h>",
			"#define ll long long",
			"#define rep(i, n) for(ll i=0; i<n; i++)",
			"#define repr(i, n) for(ll i=n; i>=0; i--)",
			"#define reps(i, s, e) for(ll i=s; i<e; i++)",
			"#define inf 1e18",
			"using namespace std;"
		],
		"description": ""
	}
}
